// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "ProductService/openapi/gen/productservice/models"
)

// GetAPIV1ProductsProductIDOKCode is the HTTP code returned for type GetAPIV1ProductsProductIDOK
const GetAPIV1ProductsProductIDOKCode int = 200

/*GetAPIV1ProductsProductIDOK Status 200

swagger:response getApiV1ProductsProductIdOK
*/
type GetAPIV1ProductsProductIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Product `json:"body,omitempty"`
}

// NewGetAPIV1ProductsProductIDOK creates GetAPIV1ProductsProductIDOK with default headers values
func NewGetAPIV1ProductsProductIDOK() *GetAPIV1ProductsProductIDOK {

	return &GetAPIV1ProductsProductIDOK{}
}

// WithPayload adds the payload to the get Api v1 products product Id o k response
func (o *GetAPIV1ProductsProductIDOK) WithPayload(payload *models.Product) *GetAPIV1ProductsProductIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Api v1 products product Id o k response
func (o *GetAPIV1ProductsProductIDOK) SetPayload(payload *models.Product) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAPIV1ProductsProductIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAPIV1ProductsProductIDBadRequestCode is the HTTP code returned for type GetAPIV1ProductsProductIDBadRequest
const GetAPIV1ProductsProductIDBadRequestCode int = 400

/*GetAPIV1ProductsProductIDBadRequest Status 400

swagger:response getApiV1ProductsProductIdBadRequest
*/
type GetAPIV1ProductsProductIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAPIV1ProductsProductIDBadRequest creates GetAPIV1ProductsProductIDBadRequest with default headers values
func NewGetAPIV1ProductsProductIDBadRequest() *GetAPIV1ProductsProductIDBadRequest {

	return &GetAPIV1ProductsProductIDBadRequest{}
}

// WithPayload adds the payload to the get Api v1 products product Id bad request response
func (o *GetAPIV1ProductsProductIDBadRequest) WithPayload(payload *models.Error) *GetAPIV1ProductsProductIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Api v1 products product Id bad request response
func (o *GetAPIV1ProductsProductIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAPIV1ProductsProductIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAPIV1ProductsProductIDInternalServerErrorCode is the HTTP code returned for type GetAPIV1ProductsProductIDInternalServerError
const GetAPIV1ProductsProductIDInternalServerErrorCode int = 500

/*GetAPIV1ProductsProductIDInternalServerError Status 500

swagger:response getApiV1ProductsProductIdInternalServerError
*/
type GetAPIV1ProductsProductIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAPIV1ProductsProductIDInternalServerError creates GetAPIV1ProductsProductIDInternalServerError with default headers values
func NewGetAPIV1ProductsProductIDInternalServerError() *GetAPIV1ProductsProductIDInternalServerError {

	return &GetAPIV1ProductsProductIDInternalServerError{}
}

// WithPayload adds the payload to the get Api v1 products product Id internal server error response
func (o *GetAPIV1ProductsProductIDInternalServerError) WithPayload(payload *models.Error) *GetAPIV1ProductsProductIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Api v1 products product Id internal server error response
func (o *GetAPIV1ProductsProductIDInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAPIV1ProductsProductIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
